{"version":3,"sources":["js/03-timer.js"],"names":["CountdownTimer","constructor","selector","targetDate","intervalId","start","refs","days","document","querySelector","hours","mins","secs","calcTheTime","dateNow","Date","now","deltaTime","timerReview","getTimeComponents","time","innerHTML","clearInterval","pad","Math","floor","updateComponents","textContent","value","String","padStart","setInterval","timeToMyBithday"],"mappings":";;;;;AAkHA,aAjHA,QAAA,wBACA,QAAA,uBAkCA,MAAMA,EACJC,aAAY,SAAEC,EAAF,WAAYC,IACjBC,KAAAA,WAAa,KACbF,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbE,KAAAA,QAEAC,KAAAA,KAAO,CACVC,KAAMC,SAASC,iBACV,KAAKP,oCAEVQ,MAAOF,SAASC,iBACX,KAAKP,qCAEVS,KAAMH,SAASC,iBACV,KAAKP,oCAEVU,KAAMJ,SAASC,iBACV,KAAKP,qCAMdW,cACMC,IAAAA,EAAUC,KAAKC,MACfC,EAAY,KAAKd,WAAaW,EAE7BI,KAAAA,YAAYD,GAEZE,KAAAA,kBAAkBF,GAIzBC,YAAYE,GACNA,EAAO,IACTZ,SAASC,iBAAiB,KAAKP,YAAYmB,UAAY,yBAEvDC,cAAclB,aAIlBe,kBAAkBC,GACZb,IAAAA,EAAO,KAAKgB,IACdC,KAAKC,MAAML,EAAQ,QAEjBV,EAAQ,KAAKa,IACfC,KAAKC,MAAOL,EAAQ,MAAyB,OAE3CT,EAAO,KAAKY,IACdC,KAAKC,MAAOL,EAAQ,KAAoB,MAEtCR,EAAO,KAAKW,IACdC,KAAKC,MAAOL,EAAQ,IAAc,MAG/BM,KAAAA,iBAAiBnB,EAAMG,EAAOC,EAAMC,GAG3Cc,iBAAiBnB,EAAMG,EAAOC,EAAMC,GAC7BN,KAAAA,KAAKC,KAAKoB,YAAcpB,EACxBD,KAAAA,KAAKI,MAAMiB,YAAcjB,EACzBJ,KAAAA,KAAKK,KAAKgB,YAAchB,EACxBL,KAAAA,KAAKM,KAAKe,YAAcf,EAG/BW,IAAIK,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGnCzB,QACOD,KAAAA,WAAa2B,YAAY,KACvBlB,KAAAA,eACJ,MAKP,MAAMmB,EAAkB,IAAIhC,EAAgB,CAC1CE,SAAU,WACVC,WAAY,IAAIY,KAAK","file":"03-timer.992fc825.js","sourceRoot":"../src","sourcesContent":["// Подключаем стили\nimport '../sass/_common.scss';\nimport '../sass/_timer.scss';\n\n// // ======== СПОСОБ №1 ========\n// Установка даты окончания\n// const endDate = new Date(\"Apr 23, 2022 12:00:00\").getTime();\n\n// // Определяем таймер\n// const intervalId = setInterval(\n//   function() {\n//   // Расчёт оставшегося времени\n//   let dateNow = new Date().getTime();\n//   let time = endDate - dateNow;\n\n//   if (time >= 0) {\n//     // Конвертация UTC в дни, часы, минуты и секунды\n//     let days = Math.floor(time / (1000 * 60 * 60 * 24));\n//     let hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n//     let mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n//     let secs = Math.floor((time % (1000 * 60)) / 1000);\n\n//     // Вывод таймера\n//     document.querySelector('span[data-value=\"days\"]').innerHTML = days;\n//     document.querySelector('span[data-value=\"hours\"]').innerHTML = (\"0\"+hours).slice(-2);\n//     document.querySelector('span[data-value=\"mins\"]').innerHTML = (\"0\"+mins).slice(-2);\n//     document.querySelector('span[data-value=\"secs\"]').innerHTML = (\"0\"+secs).slice(-2);\n//   } else {\n//     // Уведомление для пользователя, когда закончился отсчёт\n//     document.getElementById(\"timer-1\").innerHTML = \"The countdown is over!\";\n//     clearInterval(intervalId);\n//   };\n// }, 1000);\n\n\n// ======== СПОСОБ №2 =========\nclass CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.intervalId = null;\n    this.selector = selector;\n    this.targetDate = targetDate;\n    this.start();\n\n    this.refs = {\n      days: document.querySelector(\n        `${this.selector} span[data-value=\"days\"]`\n      ),\n      hours: document.querySelector(\n        `${this.selector} span[data-value=\"hours\"]`\n      ),\n      mins: document.querySelector(\n        `${this.selector} span[data-value=\"mins\"]`\n      ),\n      secs: document.querySelector(\n        `${this.selector} span[data-value=\"secs\"]`\n      ),\n\n    };\n  }\n  \n  calcTheTime() {\n    let dateNow = Date.now();\n    let deltaTime = this.targetDate - dateNow;\n\n    this.timerReview(deltaTime);   // ???\n\n    this.getTimeComponents(deltaTime);\n  }\n\n  // Проверка на время  \n  timerReview(time) {   // ???\n    if (time < 0) {\n      document.querySelector(`${this.selector}`).innerHTML = \"The countdown is over!\";\n\n      clearInterval(intervalId);\n    };\n  }\n\n  getTimeComponents(time) {\n    let days = this.pad(\n      Math.floor(time / (1000 * 60 * 60 * 24))\n    );\n    let hours = this.pad(\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n    );\n    let mins = this.pad(\n      Math.floor((time % (1000 * 60 * 60)) / (1000 * 60))\n    );\n    let secs = this.pad(\n      Math.floor((time % (1000 * 60)) / 1000)\n    );\n      \n    this.updateComponents(days, hours, mins, secs);\n  }\n  \n  updateComponents(days, hours, mins, secs) {  \n    this.refs.days.textContent = days; \n    this.refs.hours.textContent = hours;\n    this.refs.mins.textContent = mins;\n    this.refs.secs.textContent = secs;\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  start() {\n    this.intervalId = setInterval(() => { \n      this.calcTheTime();\n    }, 1000); \n  }\n\n};\n\nconst timeToMyBithday = new CountdownTimer ({\n  selector: '#timer-1',\n  targetDate: new Date('Apr 23, 2022'),\n});"]}